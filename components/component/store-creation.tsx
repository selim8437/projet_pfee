/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/vuO2cWYvUzm
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client" ;
import { CardTitle, CardDescription, CardHeader, CardContent, CardFooter, Card } from "@/components/ui/card"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { SelectValue, SelectTrigger, SelectItem, SelectContent, Select } from "@/components/ui/select"
import { Button } from "@/components/ui/button"
import { UploadButton } from "@/app/lib/uploadthing"
import ButtonUpload from "@/app/ui/uploader-button"
import { useEffect, useState } from "react"
import { getAllCategories } from "@/app/lib/categories"
import { Category } from "@/app/lib/types/category"
import { Store } from "@/app/lib/types/store"
import { v4 } from "uuid"
import { createStore } from "@/app/lib/stores"
import { useUser } from "@clerk/nextjs";

export function StoreCreation() {
  const [id,setId]=useState<string>('') ;
  const [name,setName]=useState<string>('');
  const [description,setDescription]=useState<string>('');
  const [logo,setLogo]=useState<string>('');
  const [banner,setBanner]=useState<string>('');
  const [verifUrl,setLicense]=useState<string>('');
  const [verifState,setVerifState]=useState<string>('') ;
  const [shippingOptions,setShippingOption]=useState<string>('');
  const [returnPolicies,setReturnPolicies]=useState<string>('') ;
  const [categories,setCategories]=useState<Category[]>([]);
  const [categoryId,setCategory]=useState<string>('');
  const [userId,setUserId]=useState<string|null>(null);
  const {user}=useUser() ;
   
  const handleLogoUrlChange=(url:string)=>{
    setLogo(url) ;
  }
  const handleBannerUrlChange=(url:string)=>{
    setBanner(url) ;
  }
  const handleLicenseUrlChange=(url:string)=>{
    setLicense(url) ;
  }
  const fetchCategories=(async ()=>{
    const cat=await getAllCategories() ;
    setCategories(cat) ;
  })
  const handleValuechange=(e:string)=>{
    setCategory(e) ;
  }
  useEffect(()=>{
    const handlefetchCategories = async () => {
      if (user?.id) {
        try {
          console.log(user.id)
          setUserId(user.id) ;
          const cat=await getAllCategories() ;
          setCategories(cat) ;
          setId(v4()) ;

        }catch(e){
          console.log(e);
        }
      }
    }
    handlefetchCategories();
  },[user])
  const handleSubmit=()=>{
    const st:Store={id,name,logo,banner,description,categoryId,verifUrl,verifState,shippingOptions,returnPolicies} ;
    if(userId!=null)
      createStore(st,userId);
    else{
      console.log('user id is null') ;
    }
  }
  return (
    <Card className="w-full max-w-md mx-auto mt-8">
      <CardHeader>
        <CardTitle>Create Your Store</CardTitle>
        <CardDescription>Fill out the form to create your store.</CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="space-y-2">
          <Label htmlFor="name">Store Name</Label>
          <Input onChange={(e)=>setName(e.target.value)} id="name" placeholder="Enter store name" />
        </div>
        <div className="space-y-2">
          <Label htmlFor="description">Description</Label>
          <Textarea onChange={(e)=>setDescription(e.target.value)} className="min-h-[100px]" id="description" placeholder="Enter store description" />
        </div>
        <div className="space-y-2">
          <Label htmlFor="category">Category</Label>
          <Select onValueChange={handleValuechange} >
            <SelectTrigger>
              <SelectValue placeholder="Select category" />
            </SelectTrigger>
            <SelectContent  >
              {categories.map((categori,index)=>(
                <div key={index}>
              <SelectItem value={categori.id}>{categori.categoryname}</SelectItem>
              </div>
              ))}
            </SelectContent>
          </Select>
        </div>
        <div className="space-y-2">
          <Label htmlFor="logo">Store Logo</Label>
          <div className="grid w-full items-center gap-4">
                <ButtonUpload onImageUrlChange={(a) => handleLogoUrlChange(a)}/>
                
          </div>
        </div>
        <div className="space-y-2">
          <Label htmlFor="logo">Store Banner</Label>
          <div className="grid w-full items-center gap-4">
                <ButtonUpload onImageUrlChange={(a) => handleBannerUrlChange(a)}/>
                  
          </div>
        </div>
        <div className="space-y-2">
          <Label htmlFor="logo">Organization License</Label>
          <div className="grid w-full items-center gap-4">
                <ButtonUpload onImageUrlChange={(a) => handleLicenseUrlChange(a)}/>
                 
          </div>
        </div>
      </CardContent>
      <CardFooter>
        <Button onClick={handleSubmit} className="ml-auto bg-black">Create Store</Button>
      </CardFooter>
    </Card>
  )
}

function UploadIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
      <polyline points="17 8 12 3 7 8" />
      <line x1="12" x2="12" y1="3" y2="15" />
    </svg>
  )
}
