/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/geFSVqGHdyR
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Button } from "@/components/ui/button"
import ImageUpload from "@/app/ui/uploader"
import { JSX, SVGProps, useEffect, useState } from "react"
import { Product } from "@/app/lib/types/prduct"
import { createProduct } from "@/app/lib/products"
import { useUser } from "@clerk/nextjs"
import { Category } from "@/app/lib/types/category";
import { createCategory } from "@/app/lib/categories";


export function Ccateg() {
    const [id, setId] = useState('');
    const [categoryname, setCategoryName] = useState('');
  

 

  

  

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    const updatedCategory: Category = { id, categoryname};
    createCategory(updatedCategory)
      .then(() => {
        // Call the onProductUpdate callback function after successful update
        onCategUpdate();
      })
      .catch((error) => {
        console.error("Error creating product:", error);
      });
  };
  return (
    <div className="max-w-2xl mx-auto p-6 md:p-8 lg:p-10">
      <div className="space-y-6">
        <div>
          <h1 className="text-3xl font-bold">Create a new category</h1>
          <p className="text-gray-500 dark:text-gray-400">Fill out the form to add a new category .</p>
        </div>
        <form className="grid gap-6" onSubmit={handleSubmit}>
          <div className="grid gap-2">
            <Label htmlFor="name">Category id</Label>
            <Input id="name" placeholder='Enter category id'     onChange={(e) => setId(e.target.value)}
/>
          </div>
          <div className="grid gap-2">
            <Label htmlFor="name">Category name</Label>
            <Input id="name" placeholder='Enter category name'     onChange={(e) => setCategoryName(e.target.value)}
/>
          </div>
                    
        <Button className="w-full" type="submit">
            Create Category
          </Button>
        </form>
      </div>
    </div>
  )
}

function PlusIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>
  )
}
function onCategUpdate() {
  throw new Error("Function not implemented.");
}

