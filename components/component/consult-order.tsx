/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/MdEGNicoZIp
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
'use client' ;
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { AvatarImage, AvatarFallback, Avatar } from "@/components/ui/avatar"
import { CardHeader, CardContent, CardFooter, Card } from "@/components/ui/card"
import { Separator } from "@/components/ui/separator"
import { getOrderById } from "@/app/lib/orders"
import { useEffect, useState } from "react"
import { Order } from "@/app/lib/types/order"
import InitPay from "./initiate-pay-button";
import { getStatusBadgeClass } from "./shop-orders";
import { getUserName } from "@/app/lib/users";

export function ConsultOrder({orderId}:{orderId:string}) {
  const [order,setOrder]=useState<Order|null>(null) ;
  const [buyerId,setBuyerId]=useState<string>('');
  const handlePrint = () => {
    window.print();
  };
  const fetchOrder = async () => {
    try {
      const fetchedOrder = await getOrderById(orderId);

      if (fetchedOrder) {
        
        setOrder(fetchedOrder);
      }
    } catch (error) {
      console.error("Error fetching products:", error);
    } 

  };
  useEffect(()=>{
    fetchOrder() ;
  },[])
  return (
    <main className="w-full max-w-6xl mx-auto px-4 py-8 md:px-6 md:py-12">
      <div className="flex items-center justify-between mb-6 md:mb-8">
        <h1 className="text-2xl font-bold text-white md:text-3xl">Order Details</h1>
        <div className="flex items-center gap-2">
          
          
        </div>
      </div>
      <Card>
        <CardHeader>
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-2">
              <span className="font-medium text-lg">{order?.id}</span>
              <Badge variant="outline" className={getStatusBadgeClass(order?.status)}>{order?.status}</Badge>
            </div>
            <div className="flex items-center gap-2">
              <span className="text-gray-500 dark:text-gray-400">{order?.date}</span>
              <Avatar className="w-8 h-8 border">
                <AvatarImage alt="Sophia Anderson" src="/placeholder-user.jpg" />
                <AvatarFallback>SA</AvatarFallback>
              </Avatar>
            </div>
          </div>
        </CardHeader>
        <CardContent>
          <div className="grid md:grid-cols-2 gap-6">
            <div>
              <h2 className="text-xl font-semibold mb-4">Order Summary</h2>
              <div className="grid gap-4">
                
                <Separator />
                <div className="flex items-center justify-between">
                  <span className="font-medium">Total</span>
                  <span className="font-medium">{order?.totalPrice}</span>
                </div>
              </div>
            </div>
            <div>
              <h2 className="text-xl font-semibold mb-4">Shipping Details</h2>
              <div className="grid gap-4">
                <div>
                  <span className="font-medium">{order?.buyerId}</span>
                  <p className="text-gray-500 dark:text-gray-400">
                    {order?.adress}
                    <br />
                    {order?.region}
                  </p>
                </div>
                <div>
                  <span className="font-medium">Billing Address</span>
                  <p className="text-gray-500 dark:text-gray-400">{order?.adress}</p>
                </div>
                <div>
                  <span className="font-medium">Shipping Method</span>
                  <p className="text-gray-500 dark:text-gray-400">{order?.shippingMethod}</p>
                </div>
                <div>
                  <span className="font-medium">Payment Method</span>
                  <p className="text-gray-500 dark:text-gray-400">{order?.paymentMethod}</p>
                </div>
              </div>
            </div>
          </div>
        </CardContent>
        <CardFooter className="flex items-center justify-between">
          <div className="flex items-center gap-2">
            <Button onClick={handlePrint} size="sm" variant="outline">
              <PrinterIcon className="h-4 w-4" />
              Print
            </Button>
            
          </div>
          <div>
      {order?.status !== 'paid' && order?.status !=='pending'&& order?.status !=='rejected'&& (
        <div className="flex items-center gap-2">
          <Button size="sm" variant="outline">
            <TrashIcon className="h-4 w-4" />
            Cancel Order
          </Button>
          {order?.id && <InitPay orderId={order.id} />}
        </div>
      )}
          </div>
        </CardFooter>
      </Card>
    </main>
  )
}

export function CheckIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="white"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M20 6 9 17l-5-5" />
    </svg>
  )
}


function ChevronLeftIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m15 18-6-6 6-6" />
    </svg>
  )
}


function ChevronRightIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m9 18 6-6-6-6" />
    </svg>
  )
}


function MailIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="20" height="16" x="2" y="4" rx="2" />
      <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" />
    </svg>
  )
}


function PrinterIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2" />
      <path d="M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6" />
      <rect x="6" y="14" width="12" height="8" rx="1" />
    </svg>
  )
}


function TrashIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 6h18" />
      <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" />
      <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" />
    </svg>
  )
}
