/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/bgguDiL5yom
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { IBM_Plex_Sans } from 'next/font/google'
import { Arimo } from 'next/font/google'

ibm_plex_sans({
  subsets: ['latin'],
  display: 'swap',
})

arimo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";
import { CardTitle, CardHeader, CardContent, Card, CardFooter } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { RadioGroupItem, RadioGroup } from "@/components/ui/radio-group"
import { Button } from "@/components/ui/button"
import ImageUpload from "@/app/ui/uploader";
import { SetStateAction, useEffect, useState } from "react";
import { Radio } from "lucide-react";
import { Label } from "../ui/label";
import { Select } from "../ui/select";
import { createCategory, getStoreByid, updateStore, updateStore2, updateStoreWithCategory } from "@/app/lib/stores";
import { useUser } from "@clerk/nextjs";
import Image from 'next/image';
import {Logo} from '@/components/component/logo'
import {Banner} from '@/components/component/banner'

export default function StoreCustomization() {
  const { user } = useUser();
  let result; // Declared at the top level, making it global within the module or script
  let store ;
  const userId = user?.id; // Get the user ID or undefined if user is null/undefined
  useEffect(() => {

  const handleGetStore = async () => { 
    // mark the function as async
    if (userId){
      result = await getStoreByid(userId); // Wait for the promise to resolve

    if (result.rows.length > 0) {
            store = result.rows[0]; // Accessing the first row of the result
            setStoreName(store.name);
            setLogoUrl(store.logo);
            setBannerUrl(store.banner);
            setStoreDescription(store.description);
            setStoreCategory(store.categoryid);
            setShippingOption(store.shipping_option);
            setReturnPolicy(store.return_policies);
    } else {
        console.log('No result found');
    }
};
  }
  handleGetStore();
},)
  const [storeName, setStoreName] = useState('');
  const [logoUrl, setLogoUrl] = useState('');
  const [bannerUrl, setBannerUrl] = useState('');
  const [storeDescription, setStoreDescription] = useState('');
  const [storeCategory, setStoreCategory] = useState('');
  const [shippingOption, setShippingOption] = useState('');
  const [returnPolicy, setReturnPolicy] = useState('');

  

  const handleSaveChanges = () => {
   async function storeCustom() {
      if (user) {
        const userId = user.id;
         // Get the user ID
        updateStoreWithCategory(userId,storeName, logoUrl, bannerUrl, storeDescription, storeCategory, shippingOption, returnPolicy) 
          
      
        console.log("Store updated successfully",userId);
      } else {
        console.log("User not logged in",user);
      }
    } 
    storeCustom();        
  }

  return (
    <div>
     <div className="container  px-8 py-12 md:px-8 lg:px-10">
      <div className="flex justify-center">
        <div className="grid gap-8 md:grid-cols-3 lg:grid-cols-3 w-full max-w-4xl">
          {/* Store Name */}
          <div className="col-span-1 lg:col-span-1">
            <Card>
              <CardHeader>
                <CardTitle>Store Name</CardTitle>
              </CardHeader>
              <CardContent>
                <Input className="w-full" value={storeName} onChange={(e) => setStoreName(e.target.value)} placeholder="Enter your store name" type="text" />
              </CardContent>
            </Card>
          </div>
          {/* Store Logo */}
          <div className="col-span-1 lg:col-span-1">
            <Card>
              <CardHeader>
                <CardTitle>Store Logo</CardTitle>
              </CardHeader>
              <CardContent>
              <div className="flex items-center justify-center" >
                  <ImageUpload onImageUrlChange={setLogoUrl} />

                </div>
              
               
              </CardContent>
             
            </Card>
          </div>
          {/* Store Banner */}
          <div className="col-span-1 lg:col-span-1">
            <Card>
              <CardHeader>
                <CardTitle>Store Banner</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="flex items-center justify-center" >
                  <ImageUpload onImageUrlChange={setBannerUrl} />
                </div>
              </CardContent>
              
            </Card>
          </div>
          {/* Store Description */}
          <div className="col-span-2 lg:col-span-3">
            <Card>
              <CardHeader>
                <CardTitle>Store Description</CardTitle>
              </CardHeader>
              <CardContent>
                <Textarea
                  className="h-32 w-full"
                  value={storeDescription}
                  onChange={(e) => setStoreDescription(e.target.value)}
                  placeholder='Enter store description'
                />
              </CardContent>
            </Card>
          </div>
          {/* Store Categories */}
          <div className="col-span-2 lg:col-span-1">
            <Card>
              <CardHeader>
                <CardTitle>Category</CardTitle>
              </CardHeader>
              <CardContent>
                <Input  value={storeCategory} className="w-full"  onChange={(e) => setStoreCategory(e.target.value)}  type="text" />
              </CardContent>
            </Card>
          </div>
          {/* Shipping Options */}
          <div className="col-span-2 lg:col-span-1">
            <Card>
              <CardHeader>
                <CardTitle>Shipping options</CardTitle>
              </CardHeader>
              <CardContent>
              <Textarea
                  className="h-32 w-full"
                  maxLength={200}
                  value={shippingOption}
                  onChange={(e) => setShippingOption(e.target.value)}
                  placeholder="Enter your shipping options"
                />              </CardContent>
            </Card>
          </div>
          {/* Return Policy */}
          <div className="col-span-2 lg:col-span-1">
            <Card>
              <CardHeader>
                <CardTitle>Return Policy</CardTitle>
              </CardHeader>
              <CardContent>
                <Textarea
                  className="h-32 w-full"
                  maxLength={400}
                  value={returnPolicy}
                  onChange={(e) => setReturnPolicy(e.target.value)}
                  placeholder="Enter your return policy"
                />
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
      
    </div>
    <div className="flex justify-center mt-8">
        <Button onClick={handleSaveChanges}>Save Changes</Button>
      </div>
    </div>
  );
}